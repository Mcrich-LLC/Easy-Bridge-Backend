# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.7'

volumes:
  db_data:
  twitter-scraper-data:

networks:
  easy-bridge-backend:
    driver: bridge

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  APP_PORT: ${APP_PORT}
  DATABASE_HOST: db
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: ${DATABASE_USERNAME}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  DATABASE_PORT: ${DATABASE_PORT}
  FCM_SERVICE_ACCOUNT_KEY_PATH: /var/lib/firebase/FCM-authkey.json
  ENV: ${ENV}
  internalEditBearerToken: ${internalEditBearerToken}
  firebaseCloudMessagingBearerToken: ${firebaseCloudMessagingBearerToken}
  firebaseWebAuthToken: ${firebaseWebAuthToken}
  pushoverNotificationKey: ${pushoverNotificationKey}
  devDeviceFCMId: ${devDeviceFCMId}
  TWITTER1_USERNAME: ${TWITTER1_USERNAME}
  TWITTER1_PASSWORD: ${TWITTER1_PASSWORD}
  TWITTER1_EMAIL: ${TWITTER1_EMAIL}
  TWITTER1_EMAIL_PASSWORD: ${TWITTER1_EMAIL_PASSWORD}
  TWITTER2_USERNAME: ${TWITTER2_USERNAME}
  TWITTER2_PASSWORD: ${TWITTER2_PASSWORD}
  TWITTER2_EMAIL: ${TWITTER2_EMAIL}
  TWITTER2_EMAIL_PASSWORD: ${TWITTER2_EMAIL_PASSWORD}
  
services:
  app:
    image: bridge--backend:latest
    build:
      context: .
      dockerfile: Dockerfile.vapor
    volumes:
      - ./FCM-authkey.json:/var/lib/firebase/FCM-authkey.json
    environment:
      <<: *shared_environment
    depends_on:
      - twitter_scraper
      - db
    ports:
      - '${APP_PORT}:${APP_PORT}'
    command: ["serve", "--env", "${ENV}", "--hostname", "0.0.0.0", "--port", "${APP_PORT}"]
    restart: always
    networks:
      - easy-bridge-backend

  migrate:
    image: bridge--backend:latest
    build:
      context: .
      dockerfile: Dockerfile.vapor
    volumes:
      - ./FCM-authkey.json:/var/lib/firebase/FCM-authkey.json
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
    restart: always
    networks:
      - easy-bridge-backend

  revert:
    image: bridge--backend:latest
    build:
      context: .
      dockerfile: Dockerfile.vapor
    volumes:
      - ./FCM-authkey.json:/var/lib/firebase/FCM-authkey.json
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
    restart: always
    networks:
      - easy-bridge-backend

  db:
    image: postgres:14-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: vapor_database
    ports:
      - '${DATABASE_PORT}:5432'
    restart: always
    networks:
      - easy-bridge-backend

#  twitter_scraper:
#    image: twitter-scraper:latest
#    build:
#      context: .
#      dockerfile: Dockerfile.flask
#    volumes:
#      - ./twitter-scraper:/twitter-scraper
#    ports:
#      - "5001:5000"
#    environment:
#      <<: *shared_environment
#      # Add other environment variables specific to Flask if needed
#    networks:
#      - easy-bridge-backend
